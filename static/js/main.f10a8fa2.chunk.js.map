{"version":3,"sources":["modules/Card.js","modules/App.js","index.js"],"names":["Card","abilities","moves","name","game_indices","sprites","stats","types","className","Object","entries","map","sprite","key","replace","src","alt","ability","stat","base_stat","move","Appearance","version","type","App","useState","search","setSearch","query","setQuery","pokemon","setPokemon","exampleReq","useEffect","getRequest","a","fetch","response","json","data","alert","onSubmit","e","preventDefault","toLowerCase","value","onChange","target","console","log","ReactDOM","render","document","getElementById"],"mappings":"yRA0EeA,G,YAtEF,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAClE,OACI,yBAAKC,UAAU,QACX,0BAAMA,UAAU,YAAaL,GAC7B,wBAAIK,UAAU,cACTC,OAAOC,QAAQL,GAASM,KAAI,SAACC,EAAQC,GAAT,OACX,OAAdD,EAAO,GACH,qCAEA,wBAAIJ,UAAU,iBAAiBK,IAAKA,GAChC,0BAAML,UAAU,eAAeI,EAAO,GAAGE,QAAQ,KAAM,MACvD,yBAAKN,UAAU,SAASO,IAAKH,EAAO,GAAII,IAAKJ,EAAO,UAIpE,yBAAKJ,UAAU,SACX,6BACI,0BAAMA,UAAU,aAAhB,aACA,wBAAIA,UAAU,eACTC,OAAOC,QAAQT,GAAWU,KAAI,SAACM,EAASJ,GAAV,OAC3B,wBAAIA,IAAKA,GACL,8BAAOI,EAAQ,GAAGA,QAAQd,YAK1C,6BACI,0BAAMK,UAAU,aAAhB,SACA,wBAAIA,UAAU,YACTC,OAAOC,QAAQJ,GAAOK,KAAI,SAACO,EAAML,GAAP,OACvB,wBAAIA,IAAKA,GACL,wCAAUK,EAAK,GAAGA,KAAKf,KAAKW,QAAQ,UAAW,OAA/C,OACA,8BAAOI,EAAK,GAAGC,iBAK/B,6BACI,0BAAMX,UAAU,aAAhB,SACA,wBAAIA,UAAU,YACTC,OAAOC,QAAQR,GAAOS,KAAI,SAACS,EAAMP,GAAP,OACvB,wBAAIA,IAAKA,GACJO,EAAK,GAAGA,KAAKjB,WAK9B,6BACI,0BAAMK,UAAU,aAAhB,eACA,wBAAIA,UAAU,kBACTC,OAAOC,QAAQN,GAAcO,KAAI,SAACU,EAAYR,GAAb,OAC9B,wBAAIA,IAAKA,GACJQ,EAAW,GAAGC,QAAQnB,WAKvC,6BACI,0BAAMK,UAAU,aAAhB,QACA,wBAAIA,UAAU,YACTC,OAAOC,QAAQH,GAAOI,KAAI,SAACY,EAAMV,GAAP,OACvB,wBAAIA,IAAKA,GAAMU,EAAK,GAAGA,KAAKpB,eCAzCqB,EA1DH,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAEPC,EAFO,KAECC,EAFD,OAGYF,mBAAS,WAHrB,mBAGPG,EAHO,KAGAC,EAHA,OAIgBJ,mBAAS,IAJzB,mBAIPK,EAJO,KAIEC,EAJF,KAMRC,EAAU,4CAAwCJ,EAAxC,KAEhBK,qBAAU,WACNC,MACD,CAACN,IAEJ,IAAMM,EAAU,uCAAG,8BAAAC,EAAA,+EAEYC,MAAMJ,GAFlB,cAELK,EAFK,gBAGIA,EAASC,OAHb,OAGTC,EAHS,OAIfR,EAAWQ,GAJI,kDAOXC,MAAM,oBAAD,cAPM,0DAAH,qDAqBhB,OACI,yBAAKhC,UAAU,OACX,0BAAMA,UAAU,cAAciC,SARpB,SAAAC,GACdA,EAAEC,iBACFd,EAASH,EAAOkB,eAChBjB,EAAU,MAMF,2BAAOnB,UAAU,aAAae,KAAK,OAAOsB,MAAOnB,EAAQoB,SAbhD,SAAAJ,GACjBf,EAAUe,EAAEK,OAAOF,UAaX,4BAAQrC,UAAU,gBAAgBe,KAAK,UAAvC,cAEJ,yBAAKf,UAAU,eAEU,MAAjBsB,EAAQvB,MAAgByC,QAAQC,IAAI,eAChC,kBAAC,EAAD,CACIhD,UAAW6B,EAAQ7B,UACnBC,MAAO4B,EAAQ5B,MACfC,KAAM2B,EAAQ3B,KACdC,aAAc0B,EAAQ1B,aACtBC,QAASyB,EAAQzB,QACjBC,MAAOwB,EAAQxB,MACfC,MAAOuB,EAAQvB,WCnD3C2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f10a8fa2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\n\r\nconst Card = ({ abilities, moves, name, game_indices, sprites, stats, types }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <span className='pokeName' >{name}</span>\r\n            <ul className='spriteList'>\r\n                {Object.entries(sprites).map((sprite, key) => (\r\n                    sprite[1] === null ?\r\n                        <></>\r\n                        :\r\n                        <li className='spriteListItem' key={key}>\r\n                            <span className='spriteTitle'>{sprite[0].replace(/_/g, ' ')}</span>\r\n                            <img className='sprite' src={sprite[1]} alt={sprite[0]}></img>\r\n                        </li>\r\n                ))}\r\n            </ul>\r\n            <div className=\"lists\">\r\n                <div>\r\n                    <span className='listTitle' >Abilities</span>\r\n                    <ol className='abilityList'>\r\n                        {Object.entries(abilities).map((ability, key) => (\r\n                            <li key={key}>\r\n                                <span>{ability[1].ability.name}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div>\r\n                    <span className='listTitle' >Stats</span>\r\n                    <ol className='statList'>\r\n                        {Object.entries(stats).map((stat, key) => (\r\n                            <li key={key}>\r\n                                <span>{`${stat[1].stat.name.replace('special', 'spc')}: `}</span>\r\n                                <span>{stat[1].base_stat}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div>\r\n                    <span className='listTitle' >Moves</span>\r\n                    <ol className='moveList'>\r\n                        {Object.entries(moves).map((move, key) => (\r\n                            <li key={key}>\r\n                                {move[1].move.name}\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div>\r\n                    <span className='listTitle' >Appearances</span>\r\n                    <ol className='AppearanceList'>\r\n                        {Object.entries(game_indices).map((Appearance, key) => (\r\n                            <li key={key}>\r\n                                {Appearance[1].version.name}\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n                <div>\r\n                    <span className='listTitle' >Type</span>\r\n                    <ol className='typeList'>\r\n                        {Object.entries(types).map((type, key) => (\r\n                            <li key={key}>{type[1].type.name}</li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport './Card.js'\r\nimport Card from './Card.js'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [search, setSearch] = useState('')\r\n    const [query, setQuery] = useState('pikachu')\r\n    const [pokemon, setPokemon] = useState({})\r\n\r\n    const exampleReq = `https://pokeapi.co/api/v2/pokemon/${query}/`\r\n\r\n    useEffect(() => {\r\n        getRequest()\r\n    }, [query])\r\n\r\n    const getRequest = async () => {\r\n        try{\r\n            const response = await fetch(exampleReq)\r\n        const data = await response.json()\r\n        setPokemon(data)\r\n        }\r\n        catch(err){\r\n            alert(`Um erro ocorreu: ${err}`)\r\n        }\r\n    }\r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const getSearch = e => {\r\n        e.preventDefault()\r\n        setQuery(search.toLowerCase())\r\n        setSearch('')\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <form className=\"search-form\" onSubmit={getSearch}>\r\n                <input className='search-bar' type=\"text\" value={search} onChange={updateSearch} />\r\n                <button className='search-button' type=\"submit\">Pesquisar</button>\r\n            </form>\r\n            <div className=\"card-holder\">\r\n                {\r\n                    pokemon.types == null ? console.log(\"Nothing yet\") : (\r\n                        <Card\r\n                            abilities={pokemon.abilities}\r\n                            moves={pokemon.moves}\r\n                            name={pokemon.name}\r\n                            game_indices={pokemon.game_indices}\r\n                            sprites={pokemon.sprites}\r\n                            stats={pokemon.stats}\r\n                            types={pokemon.types}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './modules/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}